import React, { useState, useEffect } from 'react';
import { BigNumber, ethers } from 'ethers';
import { useContext } from 'react';
import { NftContext } from '../context/NftContext';
import abi from '../utils/KevinNFT.json';

import { contractAddress } from '../utils/constant';

const { ethereum } = window;

const Hero = () => {
  const [mintAmount, setMintAmount] = useState(1);
  const [totalSupply, setTotalSupply] = useState('');
  const [accounts, setAccounts] = useState([]);
  const [CONFIG, SET_CONFIG] = useState({
    CONTRACT_ADDRESS: '0xc12bB3B5860D9a18f3c857bDbF2F8E662aB77824',
    SCAN_LINK:
      'https://rinkeby.etherscan.io/address/0xc12bB3B5860D9a18f3c857bDbF2F8E662aB77824',
    NETWORK: {
      NAME: '',
      SYMBOL: '',
      ID: 0,
    },
    NFT_NAME: 'KevinNFT',
    SYMBOL: 'KJS',
    MAX_SUPPLY: 2121,
    WEI_COST: 50000000000000000, // 0.05 eth
    TOTAL_MINTED: 0,
    GAS_LIMIT: 0,
    MARKETPLACE: '',
    MARKETPLACE_LINK: '',
    SHOW_BACKGROUND: false,
  });

  const handleMint = async () => {
    if (ethereum) {
      const provider = new ethers.providers.Web3Provider(ethereum);
      const signer = provider.getSigner(
        '0x4C1a337F1d09b86FF71fd1d19B95E1756e96EfF9'
      );

      const contract = new ethers.Contract(contractAddress, abi, signer);

      try {
        contract.mint(mintAmount, {
          from: '0x4C1a337F1d09b86FF71fd1d19B95E1756e96EfF9',
          gasLimit: '100000',
          value: ethers.utils.parseEther((0.05 * mintAmount).toString()),
        });
        const a = contract
          .totalSupply()
          .then((response) => setTotalSupply(response));
      } catch (err) {
        console.log('error', err);
      }
    }

    useEffect(() => {
      totalSupply();
    }, []);
  };

  return (
    <div className="flex w-full justify-center items-center">
      <div className="flex mf:flex-row flex-col items-start justify-between md:p-20 py-12 p-4">
        <div className="flex flex-1 justify-start flex-col mf:mr-10">
          <div className="flex flex-col items-center">
            <img
              src="/images/preview.gif"
              width="270"
              height="270"
              alt="emoji faces gif"
              className="rounded-md"
            />
            <br />
            <h1 className="text-center text-3xl sm:text-5xl text-white text-gradient font-montserrat py-1">
              {CONFIG.MAX_SUPPLY} Hottest NFT Collection
              <br /> on Opensea
            </h1>

            <p className="flex text-center items-center mt-5 text-white font-roboto md:w-9/12 w-11/12 text-base">
              KevinNFT is a private collection of 2121 NFTs <br />
              which are characterized by their level of rarity. <br />
              They have been designed by a talented designer and generated by
              Artificial Intelligence.
            </p>
            <br />
            <div className="flex text-white box-border space-x-5">
              <button
                className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full"
                onClick={() => setMintAmount(mintAmount - 1)}
              >
                -
              </button>
              <p className="items-center pt-2"> {mintAmount} </p>
              <button
                className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full"
                onClick={() => setMintAmount(mintAmount + 1)}
              >
                +
              </button>
            </div>
            <button
              type="button"
              onClick={handleMint}
              className="flex w-1/6 flex-row justify-center items-center my-5 bg-[#2952e3] p-3 rounded-full cursor-pointer hover:bg-[#2546bd]"
            >
              <p className="text-white text-base font-semibold">Start Mint!</p>
            </button>
            <p className="text-white">
              NFT minted: {`${totalSupply} / ${CONFIG.MAX_SUPPLY}`}
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Hero;
